[project]
name = "chinook-service"
version = "0.1.0"
description = "Flask REST API for the Chinook sample database"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Chinook Service Contributors"}
]
keywords = ["flask", "rest", "api", "chinook", "database", "sqlite"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Flask",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Database",
]
requires-python = ">=3.9"
dependencies = [
    "Flask>=3.0.0,<4.0",
    "Flask-RESTful>=0.3.10,<0.4",
    "SQLAlchemy>=2.0.36,<3.0",
    "yahoo_fin>=0.8.9.1,<0.9",
]

[project.urls]
Homepage = "https://github.com/YOUR_USERNAME/servicetest"
Repository = "https://github.com/YOUR_USERNAME/servicetest"
Issues = "https://github.com/YOUR_USERNAME/servicetest/issues"
Changelog = "https://github.com/YOUR_USERNAME/servicetest/blob/main/CHANGELOG.md"

[project.scripts]
chinook-service = "chinook_service.__main__:main"

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[dependency-groups]
dev = [
    "pytest>=8.3.0,<9.0",
    "pytest-cov>=5.0.0,<6.0",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
]

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "D",   # pydocstyle
    "Q",   # flake8-quotes
    "T20", # flake8-print
    "RUF", # Ruff-specific rules
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "T20"]  # Allow missing docstrings and print statements in tests

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "yahoo_fin.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src/chinook_service",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
